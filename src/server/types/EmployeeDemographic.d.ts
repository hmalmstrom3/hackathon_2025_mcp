/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/coreHr/v1/companies/{companyId}/employees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of employees by company ID
         * @description **Summary Description**
         *
         *     The GET Employee List by Company ID API endpoint provides a list of up to 20 employees per call from the Paylocity system. Designed for the initial population of user systems with Paylocity's employee data, it supports pagination for easy navigation through results. The 'include' parameter enables selective retrieval of payload elements, while the 'Active Only' filter helps obtain only those employees with an 'Active' Employee Status Type. This makes the endpoint highly flexible and capable of delivering tailored listings to meet specific user requirements.
         *
         *     **GET Employee List by Company ID - Use Cases:**
         *
         *     - The 'Get Employee List by Company ID' endpoint empowers API users to fetch a comprehensive list of employees alongside their relevant data. Ideal for initial data loads.
         *
         *     - The recommended best practice to track employee demographic changes is not through regular polling of this endpoint. Instead, utilize our employee webhooks in conjunction with the 'GET Single Employee by Company and Employee ID' endpoint.
         */
        get: {
            parameters: {
                query?: {
                    /**
                     * @description Number of employees per page.
                     *                     **Default Value:** 20
                     *                     **Maximum Value:** 20
                     * @example 5
                     */
                    limit?: number;
                    /** @description Next token for the page. */
                    nextToken?: string;
                    /**
                     * @description Comma separated list of data to be included.
                     *                     **Allowable Values:**
                     *                     info, position, status and payrate.
                     * @example info,position,status,payrate,futurePayrates
                     */
                    include?: string;
                    /** @description Filter only active emplooyes.
                     *                     **Allowable Values:**
                     *                     true, false */
                    activeOnly?: boolean;
                };
                header?: {
                    /** @description If true all responses are mocked and generated randomly. */
                    testMode?: boolean;
                    /** @description Authorization token. Ex. Bearer ... */
                    Authorization?: string;
                };
                path: {
                    /**
                     * @description The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.
                     *                     **Allowable Values:**
                     *                     9 char max
                     * @example A12345
                     */
                    companyId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EmployeePage"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/coreHr/v1/companies/{companyId}/employees/{employeeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single employee by company and employee ID
         * @description **Summary Description**
         *
         *     The GET Single Employee API endpoint allows users to fetch specific employee details from a client's Paylocity instance. To use this endpoint, the Paylocity Company ID and the Employee ID must be specified. The endpoint also offers an 'include' parameter for selective data retrieval, enabling users to choose specific payload elements to retrieve.
         *
         *     **GET Specific Employee - Use Cases:**
         *
         *     - This API endpoint will allow an API user to retrieve an employee record for a specific employee ID.
         *
         *     - For optimal use, pair this API endpoint with the Paylocity Employee Change Web Hook. This ensures that you get notified whenever there's a change in the employee's data in Paylocity. Along with the notification, you will receive the Paylocity Company ID and Employee ID corresponding to the employee whose data has been modified. You can then utilize the GET Specific Employee API endpoint to access the most recent version of the updated employee record.
         */
        get: {
            parameters: {
                query: {
                    /**
                     * @description Comma separated list of data to be included.
                     *                     **Allowable Values:**
                     *                     info, position, status, payrate and futurePayrates.
                     * @example info,position,status,payrate,futurePayrates
                     */
                    include: string;
                };
                header?: {
                    /** @description If true all responses are mocked and generated randomly. */
                    testMode?: boolean;
                    /** @description Authorization token. Ex. Bearer ... */
                    Authorization?: string;
                };
                path: {
                    /**
                     * @description The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.
                     *                     **Allowable Values:**
                     *                     9 char max
                     * @example A12345
                     */
                    companyId: string;
                    /** @description A filter to use to limit results to a specific employee.
                     *                     **Allowable Values:**
                     *                     255 char max */
                    employeeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Employee"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Address: {
            /** @description Address1 */
            address1?: string | null;
            /** @description Address2 */
            address2?: string | null;
            /** @description City */
            city?: string | null;
            /** @description State */
            state?: string | null;
            /** @description PostalCode */
            postalCode?: string | null;
            /** @description Country */
            country?: string | null;
            /** @description County */
            county?: string | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        CurrentEmployeeStatus: {
            /** @description The description of the Employee Status. */
            status?: string | null;
            /** @description The Employee Status Code.
             *         **Allowable Values:**
             *         A - Active
             *         T - Terminated
             *         L - Leave */
            statusType?: string | null;
            /**
             * Format: date-time
             * @description Effective date of the latest employee status change.
             */
            effectiveDate?: string | null;
            /** @description Change reason description of the latest employee status change. */
            changeReason?: string | null;
            /**
             * Format: int32
             * @description Change reason code for the latest employee status change.
             */
            changeReasonCode?: number | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        CurrentPayRate: {
            /**
             * Format: double
             * @description Employee Base Pay Rate.
             */
            baseRate?: number | null;
            /**
             * Format: double
             * @description Default Hours for the Employee in the Pay Period.
             */
            defaultHours?: number | null;
            /**
             * Format: double
             * @description Per Check Salary Rate.
             */
            salary?: number | null;
            /** @description Pay Frequency. */
            payFrequency?: string | null;
            /** @description Pay Grade. */
            payGrade?: string | null;
            /**
             * Format: double
             * @description Annual Salary.
             */
            annualSalary?: number | null;
            /** @description Rate Per. */
            ratePer?: string | null;
            /**
             * Format: date-time
             * @description Effective date of the last employee rate change.
             */
            effectiveDate?: string | null;
            /** @description Begin Check date of the last employee rate change. */
            beginCheckDate?: string | null;
            /** @description Auto Pay Employee Flag. */
            isAutoPay?: boolean | null;
            /** @description Hourly or Salary Pay Type */
            payType?: string | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        Employee: {
            /** @description The Paylocity Employee ID. This is a unique value per Paylocity Company ID.
             *     **Allowable Values:**
             *     10 char max */
            id?: string | null;
            /** @description The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity. */
            companyId?: string | null;
            /** @description The Paylocity Identifier for a group of Company IDs. This is the unique value provided by Paylocity to each specific Payroll Group. */
            relationshipId?: string | null;
            /** @description Last Name. */
            lastName?: string | null;
            /** @description Display Name. */
            displayName?: string | null;
            /** @description The Employee Status Description, this value is customizable per client. */
            status?: string | null;
            /** @description The Employee Status Type Description, this a system controlled value.
             *         **Allowable Values:**
             *         A - Active
             *         T - Terminated
             *         L - Leave */
            statusType?: string | null;
            currentStatus?: components["schemas"]["CurrentEmployeeStatus"];
            info?: components["schemas"]["EmployeeInfo"];
            currentPayRate?: components["schemas"]["CurrentPayRate"];
            position?: components["schemas"]["Position"];
            /** @description Future pay rates. */
            futurePayRates?: components["schemas"]["PayRate"][] | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        EmployeeInfo: {
            /** @description First Name. */
            firstName?: string | null;
            /** @description Last Name. */
            lastName?: string | null;
            /** @description Display Name. */
            displayName?: string | null;
            /** @description Middle Name. */
            middleName?: string | null;
            /** @description Preferred Name. */
            preferredName?: string | null;
            /** @description Suffix. */
            suffix?: string | null;
            address?: components["schemas"]["Address"];
            /** @description Home Phone Number. */
            homePhone?: string | null;
            /** @description Mobile Phone Number. */
            mobilePhone?: string | null;
            /** @description Personal Email. */
            personalEmail?: string | null;
            /** @description Social Security Number.
             *     **Allowable Values:**
             *     11 char max */
            ssn?: string | null;
            /** @description Date of Birth.
             *     **Allowable Values:**
             *     Format: MM/DD/CCYY */
            dateOfBirth?: string | null;
            /** @description Marital Status.
             *     **Allowable Values:**
             *     10 char max */
            maritalStatus?: string | null;
            /** @description Ethnicity.
             *     **Allowable Values:**
             *     10 char max */
            ethnicityRace?: string | null;
            /** @description Gender.
             *     **Allowable Values:**
             *     1 char max */
            gender?: string | null;
            /**
             * Format: date-time
             * @description Hire Date.
             *     **Allowable Values:**
             *     Format: MM/DD/CCYY
             */
            hireDate?: string | null;
            /**
             * Format: date-time
             * @description Adjusted Seniority Date.
             *     **Allowable Values:**
             *     Format: MM/DD/CCYY
             */
            adjustedSeniorityDate?: string | null;
            /** @description Eligible for Rehire Flag. */
            eligibleforRehire?: boolean | null;
            /** @description Supervisor Paylocity Company ID. */
            supervisorCo?: string | null;
            /** @description Supervisor. */
            supervisor?: string | null;
            /** @description Is Supervisor / Reviewer? Flag. */
            isSupervisor?: boolean | null;
            /** @description Reviewer Paylocity Company ID. */
            reviewerCo?: string | null;
            /** @description Reviewer Employee ID. */
            reviewer?: string | null;
            /** @description Job Title. */
            jobTitle?: string | null;
            /** @description EEO Class. */
            eeoClass?: string | null;
            /** @description Workers Compensation Code. */
            wcc?: string | null;
            /** @description Home Shift. */
            shift?: string | null;
            /** @description Clock / Badge Number. */
            clockBadge?: string | null;
            /** @description Pay Group. */
            payGroup?: string | null;
            /** @description OT Exempt (Y/N). */
            otExempt?: boolean | null;
            /** @description Tipped. */
            tipped?: string | null;
            /** @description Minimum Wage Exempt. */
            minWageExempt?: boolean | null;
            workLocation?: components["schemas"]["WorkLocation"];
        } & {
            [key: string]: Record<string, never> | null;
        };
        EmployeePage: {
            /** Format: int32 */
            totalCount?: number;
            employees?: components["schemas"]["Employee"][] | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        PayRate: {
            /**
             * Format: double
             * @description Per Check Salary Rate.
             */
            salary?: number | null;
            /** @description Pay Frequency. */
            payFrequency?: string | null;
            /** @description Change reason. */
            changeReason?: string | null;
            /**
             * Format: double
             * @description Annual Salary.
             */
            annualSalary?: number | null;
            /**
             * Format: date-time
             * @description Effective date of the last employee rate change.
             */
            effectiveDate?: string | null;
            /** @description Begin Check date of the last employee rate change. */
            beginCheckDate?: string | null;
            /** @description Auto Pay Employee Flag. */
            isAutoPay?: boolean | null;
            /** @description Hourly or Salary Pay Type. */
            payType?: string | null;
            /** @description Pay rate description. */
            payRateDescription?: string | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        Position: {
            /**
             * Format: date-time
             * @description Effective date of the last employee position change.
             */
            effectiveDate?: string | null;
            /** @description Change Reason of last Position Change. */
            changeReason?: string | null;
            /** @description Cost Center 1 Code. */
            costCenter1?: string | null;
            /** @description Cost Center 2 Code. */
            costCenter2?: string | null;
            /** @description Cost Center 3 Code. */
            costCenter3?: string | null;
            /** @description Employee Type. */
            employeeType?: string | null;
            /** @description Position Code. */
            positionCode?: string | null;
            /** @description Position Description. */
            positionDescription?: string | null;
            /** @description Career level code. */
            careerLevelCode?: string | null;
            /** @description Career level description. */
            careerLevelDescription?: string | null;
            /** @description Position families. */
            positionFamilies?: components["schemas"]["PositionFamily"][] | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        PositionFamily: {
            /** @description Position family code. */
            code?: string | null;
            /** @description Position family description. */
            description?: string | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
        WorkLocation: {
            address?: components["schemas"]["Address"];
            /** @description Phone. */
            phone?: string | null;
            /** @description Phone Extension */
            phoneExt?: string | null;
            /** @description Work Mobile Phone */
            mobilePhone?: string | null;
            /** @description Work Email Address. */
            email?: string | null;
        } & {
            [key: string]: Record<string, never> | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
