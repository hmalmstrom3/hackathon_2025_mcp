import {McpToolDefinition} from "./definition.js";

/**
 * Map of tool definitions by name
 */
export const toolDefinitionMap: Map<string, McpToolDefinition> = new Map([

  ["getapihubpayrollv1companiesemployeesdeductions", {
    name: "getapihubpayrollv1companiesemployeesdeductions",
    description: `**Summary Description**

This function will allow the API user to GET a list of all active deductions associated with the employee record.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"filter":{"type":"string","description":"The API Filter, by defining specific conditions, enables developers to fine-tune data from API calls for more precise results, enhancing application efficiency and user-friendliness. For more information review the Filtering page"},"limit":{"type":"number","format":"int32","default":20,"description":"Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"},"offset":{"type":"number","format":"int32","default":0,"description":"Pagination offset"}},"required":["companyId","employeeId"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"},{"name":"filter","in":"query"},{"name":"limit","in":"query"},{"name":"offset","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["postapihubpayrollv1companiesemployeesdeductions", {
    name: "postapihubpayrollv1companiesemployeesdeductions",
    description: `**Summary Description**

 This function will allow the API user to create a new deduction on the employee record.
Garnishments cannot be created using the Deduction endpoints.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"requestBody":{"type":"object","properties":{"effectiveFrom":{"type":["string","null"],"description":"Effective Date of the Deduction","format":"date-time"},"effectiveTo":{"type":["string","null"],"description":"End Date of the Deduction","format":"date-time"},"calculationCode":{"type":["string","null"],"description":"Calculation Code that Applies to Deduction"},"rate":{"type":["number","null"],"description":"Rate for the Deduction","format":"double"},"frequency":{"type":["string","null"],"description":"Frequency determines how often the deduction Rate is applied in payroll"},"agency":{"type":["string","null"],"description":"Agency Code. These are custom per client"},"arrear":{"type":["number","null"],"description":"Money that is owed","format":"double"},"miscellaneousInfo":{"type":["string","null"],"description":"Miscellaneous Information"},"note":{"type":["string","null"],"description":"Deduction Notes"},"selfInsured":{"type":["boolean","null"],"description":"Self-Insured Plan Flag. This will generate Part III of the employee's 1095-C Form"},"priority":{"type":["number","null"],"description":"Priority determines the order in which a deduction is subtracted from gross pay. Priorities 1-4 are reserved for Statutory deductions(necessary by law), while 5-7 are reserved for Voluntary deductions(employee-elected).","format":"int32"},"loan401K":{"type":"object","properties":{"loanNumber":{"type":["string","null"],"description":"401K Loan Number. Provided by Record Keeper"},"issueDate":{"type":["string","null"],"description":"Date of 401K Loan Issued","format":"date-time"},"firstPaymentDate":{"type":["string","null"],"description":"First Payment Date of 401K Loan","format":"date-time"}},"additionalProperties":{"type":"object","nullable":true},"description":"A 401K loan is a type of loan that allows you to borrow money against the balance of your 401K retirement plan, up to a certain limit. It's a way for individuals to access their retirement savings without incurring early withdrawal penalties or taxes. The borrower is expected to repay the loan, typically over five years, through payroll deductions. The values to insert a loan, like Loan Number, and First Payment Date are provided by the record keeper."},"costCenters":{"type":["array","null"],"items":{"type":"object","properties":{"level":{"type":"integer","description":"Cost center level (Levels are 1-3)","format":"int32","nullable":true},"code":{"type":"string","description":"Cost Center Code associated with the Level. This must match a Paylocity Cost Center Code","nullable":true}},"additionalProperties":{"type":"object","nullable":true},"description":"Cost Centers are organizational units within a company. Typically clients will break out their employees using cost centers like divisions, location and department."},"description":"An array of objects representing the Cost Centers"},"limits":{"type":"object","properties":{"goal":{"type":["number","null"],"description":"The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual.","format":"double"},"paidToDate":{"type":["number","null"],"description":"Paid to Date tracks the amount paid toward the Goal. The Paid to Date amount will never be more than the Goal amount","format":"double"},"payPeriodMinimum":{"type":["number","null"],"description":"Minimum for the pay period","format":"double"},"payPeriodMaximum":{"type":["number","null"],"description":"Maximum for the pay period","format":"double"},"annualMaximum":{"type":["number","null"],"description":"Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting.","format":"double"}},"additionalProperties":{"type":"object","nullable":true},"description":"Limits are used to control the amount of an earning or deduction"},"code":{"type":["string","null"],"description":"Deduction Code"}},"additionalProperties":{"type":"object","nullable":true},"description":"A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck. These deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more. Each type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system. This not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."}},"required":["companyId","employeeId"]},
    method: "post",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: "application/json",
    securityRequirements: []
  }],
  ["getapihubpayrollv1companiesemployeesdeductionsbydeductioncode", {
    name: "getapihubpayrollv1companiesemployeesdeductionsbydeductioncode",
    description: `**Summary Description**

This function will allow the API user to get the details for a specific deduction code on an employee record.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"deductionCode":{"type":"string","description":"Deduction Code"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","deductionCode"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"deductionCode","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["getapihubpayrollv1companiesemployeesdeductionsbyresourceid", {
    name: "getapihubpayrollv1companiesemployeesdeductionsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to get details for a particular deduction code that occurs in the past/present/future.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"deductionCode":{"type":"string","description":"Deduction Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","deductionCode","resourceId"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"deductionCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["putapihubpayrollv1companiesemployeesdeductionsbyresourceid", {
    name: "putapihubpayrollv1companiesemployeesdeductionsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to update details for a particular deduction code that occurs in the past/present/future. Garnishments cannot be updated using the Deduction endpoints.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"deductionCode":{"type":"string","description":"Deduction Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"requestBody":{"type":"object","properties":{"effectiveFrom":{"type":["string","null"],"description":"Effective Date of the Deduction","format":"date-time"},"effectiveTo":{"type":["string","null"],"description":"End Date of the Deduction","format":"date-time"},"calculationCode":{"type":["string","null"],"description":"Calculation Code that Applies to Deduction"},"rate":{"type":["number","null"],"description":"Rate for the Deduction","format":"double"},"frequency":{"type":["string","null"],"description":"Frequency determines how often the deduction Rate is applied in payroll"},"agency":{"type":["string","null"],"description":"Agency Code. These are custom per client"},"arrear":{"type":["number","null"],"description":"Money that is owed","format":"double"},"miscellaneousInfo":{"type":["string","null"],"description":"Miscellaneous Information"},"note":{"type":["string","null"],"description":"Deduction Notes"},"selfInsured":{"type":["boolean","null"],"description":"Self-Insured Plan Flag. This will generate Part III of the employee's 1095-C Form"},"priority":{"type":["number","null"],"description":"Priority determines the order in which a deduction is subtracted from gross pay. Priorities 1-4 are reserved for Statutory deductions(necessary by law), while 5-7 are reserved for Voluntary deductions(employee-elected).","format":"int32"},"loan401K":{"type":"object","properties":{"loanNumber":{"type":["string","null"],"description":"401K Loan Number. Provided by Record Keeper"},"issueDate":{"type":["string","null"],"description":"Date of 401K Loan Issued","format":"date-time"},"firstPaymentDate":{"type":["string","null"],"description":"First Payment Date of 401K Loan","format":"date-time"}},"additionalProperties":{"type":"object","nullable":true},"description":"A 401K loan is a type of loan that allows you to borrow money against the balance of your 401K retirement plan, up to a certain limit. It's a way for individuals to access their retirement savings without incurring early withdrawal penalties or taxes. The borrower is expected to repay the loan, typically over five years, through payroll deductions. The values to insert a loan, like Loan Number, and First Payment Date are provided by the record keeper."},"costCenters":{"type":["array","null"],"items":{"type":"object","properties":{"level":{"type":"integer","description":"Cost center level (Levels are 1-3)","format":"int32","nullable":true},"code":{"type":"string","description":"Cost Center Code associated with the Level. This must match a Paylocity Cost Center Code","nullable":true}},"additionalProperties":{"type":"object","nullable":true},"description":"Cost Centers are organizational units within a company. Typically clients will break out their employees using cost centers like divisions, location and department."},"description":"An array of objects representing the Cost Centers"},"limits":{"type":"object","properties":{"goal":{"type":["number","null"],"description":"The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual.","format":"double"},"paidToDate":{"type":["number","null"],"description":"Paid to Date tracks the amount paid toward the Goal. The Paid to Date amount will never be more than the Goal amount","format":"double"},"payPeriodMinimum":{"type":["number","null"],"description":"Minimum for the pay period","format":"double"},"payPeriodMaximum":{"type":["number","null"],"description":"Maximum for the pay period","format":"double"},"annualMaximum":{"type":["number","null"],"description":"Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting.","format":"double"}},"additionalProperties":{"type":"object","nullable":true},"description":"Limits are used to control the amount of an earning or deduction"}},"additionalProperties":{"type":"object","nullable":true},"description":"A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck. These deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more. Each type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system. This not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."}},"required":["companyId","employeeId","deductionCode","resourceId"]},
    method: "put",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"deductionCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: "application/json",
    securityRequirements: []
  }],
  ["deleteapihubpayrollv1companiesemployeesdeductionsbyresourceid", {
    name: "deleteapihubpayrollv1companiesemployeesdeductionsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to DELETE a particular deduction code that occurs in the past/present/future.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"deductionCode":{"type":"string","description":"Deduction Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","deductionCode","resourceId"]},
    method: "delete",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"deductionCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["getapihubpayrollv1companiesemployeesearnings", {
    name: "getapihubpayrollv1companiesemployeesearnings",
    description: `**Summary Description**

This function will allow the API user to GET a list of all active earnings associated with the employee record.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"filter":{"type":"string","description":"The API Filter, by defining specific conditions, enables developers to fine-tune data from API calls for more precise results, enhancing application efficiency and user-friendliness. For more information review the Filtering page"},"limit":{"type":"number","format":"int32","default":20,"description":"Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"},"offset":{"type":"number","format":"int32","default":0,"description":"Pagination offset"}},"required":["companyId","employeeId"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"},{"name":"filter","in":"query"},{"name":"limit","in":"query"},{"name":"offset","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["postapihubpayrollv1companiesemployeesearnings", {
    name: "postapihubpayrollv1companiesemployeesearnings",
    description: `**Summary Description**

This function will allow the API user to create a new earning on the employee record.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"requestBody":{"type":"object","properties":{"effectiveFrom":{"type":["string","null"],"description":"Effective Date of Earning","format":"date-time"},"effectiveTo":{"type":["string","null"],"description":"End Date of Earning","format":"date-time"},"amount":{"type":["number","null"],"description":"Amount of Earning","format":"double"},"rate":{"type":["number","null"],"description":"Earning Code Rate","format":"double"},"units":{"type":["number","null"],"description":"Hours or Units Worked","format":"double"},"selfInsured":{"type":["boolean","null"],"description":"Self Insured Flag"},"calculationCode":{"type":["string","null"],"description":"Earning Calculation Code"},"frequency":{"type":["string","null"],"description":"Frequency determines how often the earning Amount is applied in payroll"},"agency":{"type":["string","null"],"description":"Agency Code"},"miscellaneousInfo":{"type":["string","null"],"description":"Miscellaneous Info"},"rateCode":{"type":["string","null"],"description":"Rate Code"},"distribution":{"type":"object","properties":{"jobCode":{"type":["string","null"],"description":"Job Code Allocation"},"costCenters":{"type":["array","null"],"items":{"type":"object","properties":{"level":{"type":"integer","description":"Cost center level (Levels are 1-3)","format":"int32","nullable":true},"code":{"type":"string","description":"Cost Center Code associated with the Level. This must match a Paylocity Cost Center Code","nullable":true}},"additionalProperties":{"type":"object","nullable":true},"description":"Cost Centers are organizational units within a company. Typically clients will break out their employees using cost centers like divisions, location and department."},"description":"An array of objects representing the Cost Centers"}},"additionalProperties":{"type":"object","nullable":true},"description":"Labor Distribution is the term for the system categorizing (distributing) payroll data among Cost Centers and Job Codes"},"limits":{"type":"object","properties":{"goal":{"type":["number","null"],"description":"The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual.","format":"double"},"paidToDate":{"type":["number","null"],"description":"Paid to Date tracks the amount paid toward the Goal. The Paid to Date amount will never be more than the Goal amount","format":"double"},"payPeriodMinimum":{"type":["number","null"],"description":"Minimum for the pay period","format":"double"},"payPeriodMaximum":{"type":["number","null"],"description":"Maximum for the pay period","format":"double"},"annualMaximum":{"type":["number","null"],"description":"Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting.","format":"double"}},"additionalProperties":{"type":"object","nullable":true},"description":"Limits are used to control the amount of an earning or deduction"},"code":{"type":["string","null"],"description":"Earning Code"}},"additionalProperties":{"type":"object","nullable":true},"description":"A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives. These codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others. The purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income. They are essential for accurate payroll calculations and compliance with tax and labor laws."}},"required":["companyId","employeeId"]},
    method: "post",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: "application/json",
    securityRequirements: []
  }],
  ["getapihubpayrollv1companiesemployeesearningsbyearningcode", {
    name: "getapihubpayrollv1companiesemployeesearningsbyearningcode",
    description: `**Summary Description**

This function will allow the API user to get the details for a specific deduction code on an employee record.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"earningCode":{"type":"string","description":"Earning Code"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","earningCode"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"earningCode","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["getapihubpayrollv1companiesemployeesearningsbyresourceid", {
    name: "getapihubpayrollv1companiesemployeesearningsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to get details for a particular earning code that occurs in the past/present/future.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"earningCode":{"type":"string","description":"Earning Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"testMode":{"type":"boolean","description":"If true all responses are mocked and generated randomly"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","earningCode","resourceId"]},
    method: "get",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"earningCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"testMode","in":"header"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
  ["putapihubpayrollv1companiesemployeesearningsbyresourceid", {
    name: "putapihubpayrollv1companiesemployeesearningsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to update details for a particular earning code that occurs in the past/present/future.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"earningCode":{"type":"string","description":"Earning Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."},"requestBody":{"type":"object","properties":{"effectiveFrom":{"type":["string","null"],"description":"Effective Date of Earning","format":"date-time"},"effectiveTo":{"type":["string","null"],"description":"End Date of Earning","format":"date-time"},"amount":{"type":["number","null"],"description":"Amount of Earning","format":"double"},"rate":{"type":["number","null"],"description":"Earning Code Rate","format":"double"},"units":{"type":["number","null"],"description":"Hours or Units Worked","format":"double"},"selfInsured":{"type":["boolean","null"],"description":"Self Insured Flag"},"calculationCode":{"type":["string","null"],"description":"Earning Calculation Code"},"frequency":{"type":["string","null"],"description":"Frequency determines how often the earning Amount is applied in payroll"},"agency":{"type":["string","null"],"description":"Agency Code"},"miscellaneousInfo":{"type":["string","null"],"description":"Miscellaneous Info"},"rateCode":{"type":["string","null"],"description":"Rate Code"},"distribution":{"type":"object","properties":{"jobCode":{"type":["string","null"],"description":"Job Code Allocation"},"costCenters":{"type":["array","null"],"items":{"type":"object","properties":{"level":{"type":"integer","description":"Cost center level (Levels are 1-3)","format":"int32","nullable":true},"code":{"type":"string","description":"Cost Center Code associated with the Level. This must match a Paylocity Cost Center Code","nullable":true}},"additionalProperties":{"type":"object","nullable":true},"description":"Cost Centers are organizational units within a company. Typically clients will break out their employees using cost centers like divisions, location and department."},"description":"An array of objects representing the Cost Centers"}},"additionalProperties":{"type":"object","nullable":true},"description":"Labor Distribution is the term for the system categorizing (distributing) payroll data among Cost Centers and Job Codes"},"limits":{"type":"object","properties":{"goal":{"type":["number","null"],"description":"The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual.","format":"double"},"paidToDate":{"type":["number","null"],"description":"Paid to Date tracks the amount paid toward the Goal. The Paid to Date amount will never be more than the Goal amount","format":"double"},"payPeriodMinimum":{"type":["number","null"],"description":"Minimum for the pay period","format":"double"},"payPeriodMaximum":{"type":["number","null"],"description":"Maximum for the pay period","format":"double"},"annualMaximum":{"type":["number","null"],"description":"Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting.","format":"double"}},"additionalProperties":{"type":"object","nullable":true},"description":"Limits are used to control the amount of an earning or deduction"}},"additionalProperties":{"type":"object","nullable":true},"description":"A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives. These codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others. The purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income. They are essential for accurate payroll calculations and compliance with tax and labor laws."}},"required":["companyId","employeeId","earningCode","resourceId"]},
    method: "put",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"earningCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: "application/json",
    securityRequirements: []
  }],
  ["deleteapihubpayrollv1companiesemployeesearningsbyresourceid", {
    name: "deleteapihubpayrollv1companiesemployeesearningsbyresourceid",
    description: `**Summary Description**

This function will allow the API user to DELETE a particular earning code that occurs in the past/present/future.`,
    inputSchema: {"type":"object","properties":{"companyId":{"type":"string","description":"The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"},"employeeId":{"type":"string","description":"A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"},"earningCode":{"type":"string","description":"Earning Code"},"resourceId":{"type":"string","format":"uuid","description":"Resource ID of the record"},"Authorization":{"type":"string","description":"Authorization token. Ex. Bearer ..."}},"required":["companyId","employeeId","earningCode","resourceId"]},
    method: "delete",
    pathTemplate: "/apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}",
    executionParameters: [{"name":"companyId","in":"path"},{"name":"employeeId","in":"path"},{"name":"earningCode","in":"path"},{"name":"resourceId","in":"path"},{"name":"Authorization","in":"header"}],
    requestBodyContentType: undefined,
    securityRequirements: []
  }],
]);